{
	"info": {
		"_postman_id": "e2c7e686-ce2c-4c61-81c1-07114484810c",
		"name": "QA_course_task_2_part_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6\r",
							"var respData = pm.response.json()\r",
							"\r",
							"//7\r",
							"var requestData = request.data;\r",
							"\r",
							"//8\r",
							"pm.test(\"response has param start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"//9\r",
							"pm.test(\"response has param qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"//10\r",
							"pm.test(\"response has param qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"//11\r",
							"pm.test(\"response has param qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//12\r",
							"pm.test(\"response has param qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"//13\r",
							"pm.test(\"response has param person\", function () {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"//14\r",
							"pm.test(\"start_qa_salary is equal to salary from request\", function () {\r",
							"    pm.expect(respData.start_qa_salary).to.eql(+requestData.salary);\r",
							"});\r",
							"//15\r",
							"pm.test(\"qa_salary_after_6_months is equal to salary*2\", function () {\r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(requestData.salary*2);\r",
							"});\r",
							"//16\r",
							"pm.test(\"qa_salary_after_12_months is equal to salary*2.7\", function () {\r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(requestData.salary*2.7);\r",
							"});\r",
							"//17\r",
							"pm.test(\"qa_salary_after_1.5_year is equal to salary*3.3\", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(requestData.salary*3.3);\r",
							"});\r",
							"//18\r",
							"pm.test(\"qa_salary_after_3.5_years is equal to salary*3.8 \", function () {\r",
							"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(requestData.salary*3.8);\r",
							"});\r",
							"//19\r",
							"pm.test(\"u_name[1] is equal to salary from request\", function () {\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(+requestData.salary);\r",
							"});\r",
							"//20\r",
							"pm.test(\"u_age is equal to age from request\", function () {\r",
							"    pm.expect(respData.person.u_age).to.eql(+requestData.age);\r",
							"});\r",
							"//21\r",
							"pm.test(\"u_salary_5_years is equal to salary*4.2 \", function () {\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(+requestData.salary*4.2);\r",
							"});\r",
							"//22\r",
							"let person = respData.person;\r",
							"for (let propName in person) {\r",
							"console.log(propName + \"=\" + person[propName]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}} ",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}
