{
	"info": {
		"_postman_id": "8a773ac4-8c87-497b-bd66-263b05c3e650",
		"name": "QA_course_task_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body string is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3\r",
							"var jsonData = pm.response.json();\r",
							"//4\r",
							"pm.test(\"name test\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Julia\");\r",
							"});\r",
							"//5\r",
							"pm.test(\"age test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"36\");\r",
							"});\r",
							"//6\r",
							"pm.test(\"salary test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(1500);\r",
							"});\r",
							"//7\r",
							"var requestData = request.data;\r",
							"//console.log(requestData)\r",
							"//var jsonData = pm.response.json();\r",
							"\r",
							"//8\r",
							"pm.test(\"response name is equal to request name\", function () {\r",
							"pm.expect(jsonData.name).to.eql(requestData.name);\r",
							"});\r",
							"//9\r",
							"pm.test(\"response age is equal to request age\", function () {\r",
							"pm.expect(jsonData.age).to.eql(requestData.age);\r",
							"});\r",
							"//10\r",
							"pm.test(\"response salary is equal to request salary\", function () {\r",
							"pm.expect(jsonData.salary).to.eql(+requestData.salary);\r",
							"});\r",
							"\r",
							"//11\r",
							"var jsonData = pm.response.json();\r",
							"var resp_family = jsonData.family\r",
							"console.log(resp_family) \r",
							"\r",
							"//12\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"pm.expect(jsonData.family.u_salary_1_5_year).to.eql(requestData.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//var reqData = pm.request.body.toJSON();\r",
							"//console.log(reqData)\r",
							"\r",
							"//var pos = reqData.indexOf('0');\r",
							"//console.log(reqData.mode)\r",
							"\r",
							"//var reqData = request.data;\r",
							"//console.log(reqData)\r",
							"\r",
							"//req_name = request.getParameter(\"value\")\r",
							"\r",
							"//var requestData = request.data;\r",
							"//var jsonData = pm.response.json();\r",
							"//pm.test(\"test-12\", function () {\r",
							"//pm.expect(jsonData.u_salary_1_5_year).to.eql(+requestData.salary*4);\r",
							"//});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Julia",
							"type": "text"
						},
						{
							"key": "age",
							"value": "36",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "age",
							"value": "",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3\r",
							"var respData = pm.response.json();\r",
							"\r",
							"//4\r",
							"var requestData = pm.request.url.query.toObject();\r",
							"\r",
							"//5\r",
							"pm.test(\"response name is equal to request name\", function () {\r",
							"    pm.expect(respData.name).to.eql(requestData.name);\r",
							"});\r",
							"\r",
							"//6\r",
							"pm.test(\"response age is equal to request age\", function () {\r",
							"    pm.expect(respData.age).to.eql(requestData.age);\r",
							"});\r",
							"//7\r",
							"pm.test(\"response salary is equal to request salary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(+requestData.salary);\r",
							"});\r",
							"//8\r",
							"console.log(respData.family);\r",
							"//9\r",
							"pm.test(\"param 'dog' has property 'name'\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"//10\r",
							"pm.test(\"param 'dog' has property 'age'\", function () {\r",
							"    pm.expect(respData.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"//11\r",
							"pm.test(\"param 'name' has property 'Luky'\", function () {\r",
							"    pm.expect(respData.family.pets.dog.name).to.include('Luky');\r",
							"});\r",
							"//12\r",
							"pm.test(\"age is equal 4\", function () {\r",
							"    pm.expect(respData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Ann&age=23&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ann"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3\r",
							"var respData = pm.response.json();\r",
							"//4\r",
							"var requestData = pm.request.url.query.toObject();\r",
							"//5\r",
							"pm.test(\"response name is equal to request name\", function () {\r",
							"    pm.expect(respData.name).to.eql(requestData.name);\r",
							"});\r",
							"//6\r",
							"pm.test(\"response age is equal to request age\", function () {\r",
							"    pm.expect(respData.age).to.eql(+requestData.age);\r",
							"});\r",
							"//7\r",
							"console.log(requestData.salary);\r",
							"//8\r",
							"console.log(respData.salary);\r",
							"//9\r",
							"console.log(respData.salary[0]);\r",
							"//10\r",
							"console.log(respData.salary[1]);\r",
							"//11\r",
							"console.log(respData.salary[2]);\r",
							"//12\r",
							"pm.test(\"salary[0] is equal request_salary\", function () {\r",
							"    pm.expect(respData.salary[0]).to.eql(+requestData.salary);\r",
							"});\r",
							"//13\r",
							"pm.test(\"salary[1] is equal request_salary*2\", function () {\r",
							"    pm.expect(+respData.salary[1]).to.eql(requestData.salary*2);\r",
							"});\r",
							"//14\r",
							"pm.test(\"salary[2] is equal request_salary*3\", function () {\r",
							"    pm.expect(+respData.salary[2]).to.eql(requestData.salary*3);\r",
							"});\r",
							"//18\r",
							"pm.environment.set(\"name\", \"Ann\");\r",
							"//19\r",
							"pm.environment.set(\"age\", \"23\");\r",
							"//20\r",
							"pm.environment.set(\"salary\", \"1500\");\r",
							"\r",
							"//21 написать цикл, который выведет по порядку в консоль элементы списка из параметра salary\r",
							"var count = 1\r",
							"var salary = respData.salary;\r",
							"for (var i = 0; i < salary.length; i++) {\r",
							"    console.log(count, 'salary =', salary[i]);\r",
							"count++\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Ann&age=23&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ann"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		}
	]
}
